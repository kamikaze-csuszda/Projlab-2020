package Strategy;
//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : ShovelDig.java
//  @ Date : 2020-03-28
//  @ Author : 
//
//

import Ice.*;
import Characters.*;
import Characters.Character;
import Item.*;

/**
 * Ez a strategia fut le ha az adott karakter aso hasznalataval as.
 */
public class ShovelDig implements DigStrategy
{
	private Shovel shovel;
	/**
	 * Alapertelmezett konstruktor.
	 */
	public ShovelDig(Shovel sh)
	{
		shovel = sh;
	}

	/**
	 * A karakteren keresztul megkapjuk a mezot,
	 * 	amin all, es ezen csokkentjuk a ho mennyiseget.
	 * 	Mivel van nala aso, ezert ket egyseggel.
	 * 	Az asonak ezutan csokkentjuk a durabilityjet, es ha nullara csokkent, akkor eltorik, nem lehet tovabb hasznalni.
	 * @param c : a karakter aki as
	 */
	public void dig(Character c)
	{
		Ice ice = c.getIce();
		ice.decSnow();
		ice.decSnow();
		c.decAction();
		shovel.decreaseDurability();
		if (shovel.getDurability() == 0){
			shovel.discard();
			c.removeItem(shovel);
		}
	}
}
